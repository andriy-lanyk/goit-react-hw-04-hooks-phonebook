{"version":3,"sources":["Components/ContactForm/ContactForm.styles.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactListStyles.js","Components/ContactList/ContactList.js","Components/Filter/Filter.styles.js","Components/Filter/Filter.js","Components/App/App.styles.js","Components/App/App.js","index.js"],"names":["Form","styled","form","Label","label","Btn","button","ContactForm","submit","useState","name","setName","number","setNumber","getValue","e","currentTarget","value","onSubmit","preventDefault","type","pattern","title","required","onChange","ItemText","span","Item","li","ContactList","contacts","visibleContacts","getElement","map","i","id","onClick","Message","Filter","change","filter","length","Container","div","App","setContacts","setFilter","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","normalizedFilter","toLowerCase","contact","includes","doubleContact","find","item","alert","uuidv4","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2786192.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  padding: 20px;\n  border: 3px solid #212121;\n`;\n\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 50%;\n  margin-bottom: 30px;\n  font-size: 20px;\n  font-weight: 800;\n`;\n\nconst Btn = styled.button`\n  width: 100px;\n  padding: 5px;\n  font-weight: 600;\n  background-color: #5d5dff;\n  border-radius: 5px;\n`;\n\nexport { Form, Label, Btn };\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Form, Label, Btn } from \"./ContactForm.styles\";\n\nfunction ContactForm({ submit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  function getValue(e) {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  }\n\n  function handleChange(e) {\n    e.preventDefault();\n    submit(name, number);\n    reset();\n  }\n\n  function reset() {\n    setName(\"\");\n    setNumber(\"\");\n  }\n\n  return (\n    <Form onSubmit={handleChange}>\n      <Label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={getValue}\n          value={name}\n        />\n      </Label>\n      <Label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={getValue}\n        />\n      </Label>\n      <Btn type=\"submit\">Add contact</Btn>\n    </Form>\n  );\n}\n\nContactForm.propTypes = {\n  submit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import styled from \"@emotion/styled\";\n\nconst Btn = styled.button`\n  padding: 3px;\n  font-weight: 600;\n  background-color: #5d5dff;\n  border-radius: 5px;\n`;\n\nconst ItemText = styled.span`\n  margin-right: 30px;\n`;\n\nconst Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  width: 350px;\n  font-size: 18px;\n`;\n\nexport { Btn, ItemText, Item };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Btn, ItemText, Item } from \"./ContactListStyles\";\n\nconst ContactList = ({ contacts, visibleContacts, getElement }) => {\n  return (\n    contacts && (\n      <ul>\n        {visibleContacts.map(({ id, name, number }, i) => (\n          <Item key={id}>\n            <ItemText>\n              {`${i + 1})    `}\n              {name}: {number}\n            </ItemText>\n            <Btn type=\"button\" onClick={() => getElement(id)}>\n              Delete\n            </Btn>\n          </Item>\n        ))}\n      </ul>\n    )\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  visibleContacts: PropTypes.array.isRequired,\n  getElement: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import styled from \"@emotion/styled\";\n\nconst Label = styled.label`\n  display: flex;\n  justify-content: space-between;\n  width: 380px;\n  font-size: 18px;\n  font-weight: 600;\n`;\n\nconst Message = styled.span`\n  font-size: 18px;\n  font-weight: 400;\n  font-style: italic;\n`;\n\nexport { Label, Message };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Label, Message } from \"./Filter.styles\";\n\nconst Filter = ({ change, filter, contacts }) => {\n  function getFilterValue(e) {\n    const { value } = e.currentTarget;\n    change(value);\n  }\n\n  return contacts.length !== 0 ? (\n    <Label>\n      Find contacts by Name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={getFilterValue}\n      />\n    </Label>\n  ) : (\n    <Message>Your Phonebook don`t have contacts</Message>\n  );\n};\n\nFilter.propTypes = {\n  change: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n  contacts: PropTypes.array.isRequired,\n};\n\nexport default Filter;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  padding: 20px;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactForm from \"../ContactForm\";\nimport ContactList from \"../ContactList\";\nimport Filter from \"../Filter\";\nimport { Container } from \"./App.styles\";\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    if (localStorage.getItem(\"myPhonebook\")?.length > 0) {\n      setContacts(JSON.parse(localStorage.getItem(\"myPhonebook\")));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"myPhonebook\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  function getFilter(value) {\n    setFilter(value);\n  }\n\n  function getContact(name, number) {\n    const doubleContact = contacts.find((item) => item.name === name);\n    if (doubleContact) {\n      alert(`${doubleContact.name} is already in contacts`);\n      return;\n    }\n    setContacts([...contacts, { id: uuidv4(), name, number }]);\n  }\n\n  function deleteContact(contactId) {\n    setContacts(\n      contacts.filter((item) => {\n        return item.id !== contactId;\n      })\n    );\n  }\n\n  const normalizedFilter = filter.toLowerCase();\n  const visibleContacts = contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm submit={getContact} />\n      <h2>Contacts</h2>\n      <Filter change={getFilter} filter={filter} contacts={contacts} />\n      <ContactList\n        contacts={contacts}\n        visibleContacts={visibleContacts}\n        getElement={deleteContact}\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}